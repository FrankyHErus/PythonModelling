from math import sqrt
from os import path

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import animation
from matplotlib.lines import Line2D

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–Ω–∏
def convertSecondsToDays(seconds):
    return int((360/365) * seconds / 86400)


# —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ
def update_progressbar(i, n):
    print("'\r{0}%".format(round(i / n * 100, 2)), end='')

# –∑–∞–¥–∞–µ–º –∫–ª–∞—Å—Å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
class InitParams:
    DefaultTime = convertSecondsToDays(31536000)
    DefaultFPS = 120
    PltLimX = 200000000
    PltLimY = 200000000
    SunRadius = 13900000
    SunPosX = 0
    SunPosY = 0
    EarthRadius = 6378000
    EarthPosX = SunPosX
    EarthPosY = SunPosY

# –∑–∞–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç X –∏ Y –ø–ª–∞–Ω–µ—Ç—ã, —á—Ç–æ–±—ã –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –±—ã–ª–æ –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—é –¥–≤–∏–∂–µ–Ω–∏—è
arr_x = []
arr_y = []

# —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –∑–¥–µ—Å—å –º—ã –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–º–µ—â–∞–µ–º –Ω–∞—à–∏ –æ–±—ä–µ–∫—Ç—ã –Ω–∞ –ø–æ–ª–æ—Ç–Ω–µ
def init():
    sun.center = (InitParams.SunPosX, InitParams.SunPosY)
    earth.center = (InitParams.SunPosX, InitParams.SunPosY)
    ax.add_patch(sun)
    ax.add_patch(earth)
    return sun, earth

def check(num):
    try:
        int(num)
        return True
    except:
        return False

# —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏, –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–º–µ—Ä –∫–∞–¥—Ä–∞, –∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –ø–ª–∞–Ω–µ—Ç—ã –ø–æ –≤—ã—Å—á–∏—Ç–∞–Ω–Ω–æ–π —Ñ–æ—Ä–º—É–ª–µ
def animate(i):

    # —Å—á–∏—Ç–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞, –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç(–∫—Ä–∞–π–Ω–∏–µ —Ç–æ—á–∫–∏ —ç–ª–ª–∏–ø—Å–∞) –≤—ã—Å—á–∏—Ç–∞–Ω –∑–∞—Ä–∞–Ω–µ–µ
    x = 149598261 * np.sin(np.radians(i))
    y = 149577370 * np.cos(np.radians(i))

    # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–∞—à—É —Ç–æ—á–∫—É
    arr_x.append(x)
    arr_y.append(y)

    # –¥–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ—á–∫–∞ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫—É —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è
    plt.plot(arr_x, arr_y, color='b', linewidth=1, zorder=2)

    # –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –ø–ª–∞–Ω–µ—Ç—É –ø–æ —Ç–µ–∫—É—â–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    earth.center = (x, y)

    # –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –ª–∏–Ω–∏—é, —Å–æ–µ–¥–∏–Ω—è—é—â—É—é –ø–ª–∞–Ω–µ—Ç—É —Å —Å–æ–ª–Ω—Ü–µ–º, –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ln.set_data([InitParams.SunPosX, x], [InitParams.SunPosY, y])

    # –ø–∏—à–µ–º –ª–µ–≥–µ–Ω–¥—É –¥–ª—è –Ω–∞—à–µ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞
    # –ï–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –¥–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–º–µ—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    earth_marker = Line2D([], [], color="white", marker='o', markerfacecolor="b", markersize=10)
    sun_marker = Line2D([], [], color="white", marker='o', markerfacecolor="y", markersize=10)
    plt.legend([earth_marker, ln, sun_marker],
               [f'Earth (107218 km/h)', f'{round(sqrt((x * x) + (y * y)), 2)} km', 'Sun'], loc='upper right')
    return earth,

# –∑–∞–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
f = r""
t = InitParams.DefaultTime
fps = InitParams.DefaultFPS

# –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ
print('Welcome to Earth-Sun moving model üåé')
print('Firstly, enter the params (or just press enter to use defaults)')
while not path.isdir(f):
    f = input("Enter the directory to save file: ")
f = path.join(f, "video.mp4")
time_input = input("Enter time (in seconds): ")
fps_input = input("Enter FPS (frames per second) for the final video: ")

# –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–æ—Ä–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, —Ç–æ —Å–æ—Ö—Ä–∞–Ω–∏–º –∏—Ö...
if check(time_input) and int(time_input) > 0:
    t = convertSecondsToDays(int(time_input))

if check(fps_input) and int(fps_input) > 0:
    fps = int(fps_input)

# ... –∞ –µ—Å–ª–∏ –æ–Ω –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ, —Ç–æ —É –Ω–∞—Å —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

# –≤—ã—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—à—É —Ñ–∏–≥—É—Ä—É
fig = plt.figure()
fig.set_dpi(100)
fig.set_size_inches(7, 6.5)

# –∑–∞–¥–∞–µ–º –æ—Å–∏ –∏ –æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –ø–ª–∞–Ω–µ—Ç—É –∏ —Å–æ–ª–Ω—Ü–µ
ax = plt.axes(xlim=(-InitParams.PltLimX, InitParams.PltLimX), ylim=(-InitParams.PltLimY, InitParams.PltLimY))
sun = plt.Circle((InitParams.SunPosX, InitParams.SunPosY), InitParams.SunRadius, fc="y", zorder=5)
earth = plt.Circle((InitParams.EarthPosX, InitParams.EarthPosY), InitParams.EarthRadius, fc='b', zorder=5)

# –æ–±—ä—è–≤–ª—è–µ–º –Ω–∞—à—É –ª–∏–Ω–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–≤—è–∑—ã–≤–∞—Ç—å –ø–ª–∞–Ω–µ—Ç—É —Å —Å–æ–ª–Ω—Ü–µ–º
ln, = plt.plot([], [], ':', color='#a7a7a7', animated=True, zorder=1)

# —Å–æ–∑–¥–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏—è
ani = animation.FuncAnimation(fig, animate,
                              init_func=init,
                              frames=t,
                              interval=1,
                              blit=True)

# –≤—ã–∑—ã–≤–∞–µ–º writer'–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ –∏ –Ω–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
# –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—â–∞–µ–º—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–æ–π :)
writervideo = animation.FFMpegWriter(fps=fps)
print("Creating the video...")
ani.save(f, writer=writervideo, progress_callback=update_progressbar)
print("'\r100.00%", end='')
plt.close()
print(f'\nVideo is saved at {f}. See you next time!')
